1. Why doesnâ€™t the following code override the default scale?
df <- tibble(
x = rnorm(10000),
y = rnorm(10000)
)
ggplot(df, aes(x, y)) +
geom_hex() +
scale_color_gradient(low = "white", high = "red") +
coord_fixed()

we need to change "color" to "fill" for it to work.

2. What is the first argument to every scale? How does it compare
to labs()?

The first argument to every scale is the name, which coincides with that of labs()


3. Change the display of the presidential terms by:
a. Combining the two variants that customize colors and x-
axis breaks
b. Improving the display of the y-axis
c. Labeling each term with the name of the president
d. Adding informative plot labels
e. Placing breaks every four years (this is trickier than it
seems!)

presidential |> 
mutate(
id = 33 + row_number(), 
name_id = fct_inorder(str_c(name, "(", id, ")"))) |> 
ggplot(aes(start, name_id, color = party)) + 
geom_point() + 
geom_segment(aes(xend = end, yend= name_id)) + 
scale_color_manual("Party", values = c(Republican = "red", Democratic ="blue")) + 
scale_y_discrete(NULL) + 
scale_x_date(NULL, breaks = presidential$start, date_labels = "'%y") + 
labs(title = "Terms of US Presidents", 
subtitle = "Roosevelth (34th) to Trump (45th)")


4. First, create the following plot. Then, modify the code using
override.aes to make the legend easier to see.
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point(aes(color = cut), alpha = 1/20)

ggplot(diamonds, aes(x = carat, y = price)) +
    geom_point(aes(color = cut), alpha = 1/20) + guides(color = guide_legend(override.aes = list(size = 3, alpha = 1)))
