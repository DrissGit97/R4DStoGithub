1. Instead of summarizing the conditional distribution with a
boxplot, you could use a frequency polygon. What do you need
to consider when using cut_width() versus cut_number()?
How does that impact a visualization of the 2D distribution of
carat and price?

cut_width requires the argument of width while cut_number needs the input of the total number of bins to be generated.
If the width is too big it will not be representative. Similarly, if the number of bins is too big, data will be clustered and hard to read.


2. Visualize the distribution of carat, partitioned by price.

ggplot(diamonds, aes(x = cut_number(price, 10), y = carat)) +
  geom_boxplot()

3. How does the price distribution of very large diamonds compare
to small diamonds? Is it as you expect, or does it surprise you?

No, the largest diamonds are the most expensive, while the rest oscilate around a lesser amount of money. The smallest diamonds are the cheapest, as you might guess.


4. Combine two of the techniques youâ€™ve learned to visualize the
combined distribution of cut, carat, and price.


5. Two-dimensional plots reveal outliers that are not visible in one-
dimensional plots. For example, some points in the following
plot have an unusual combination of x and y values, which
makes the points outliers even though their x and y values
appear normal when examined separately. Why is a scatterplot
a better display than a binned plot for this case?
diamonds |>
filter(x >= 4) |>
ggplot(aes(x = x, y = y)) +
geom_point() +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))

binned plots are more sensible.

6. Instead of creating boxes of equal width with cut_width(), we
could create boxes that contain roughly equal number of points
with cut_number(). What are the advantages and
disadvantages of this approach?
ggplot(smaller, aes(x = carat, y = price)) +
geom_boxplot(aes(group = cut_number(carat, 20)))

cut_number() is more complicated to operate with (?)